// <auto-generated />
using System;
using BookInfo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookInfoWebAPi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200225214915_WebAPI")]
    partial class WebAPI
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("BookInfo.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("AppUserID");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("BookInfo.Models.Author", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<int>("BookID");

                    b.Property<string>("Name");

                    b.HasKey("AuthorID");

                    b.HasIndex("BookID");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BookInfo.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Title");

                    b.HasKey("BookID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookInfo.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BookID");

                    b.Property<int?>("MemberAppUserID");

                    b.Property<string>("ReviewText");

                    b.HasKey("ReviewID");

                    b.HasIndex("BookID");

                    b.HasIndex("MemberAppUserID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BookInfo.Models.Author", b =>
                {
                    b.HasOne("BookInfo.Models.Book")
                        .WithMany("Authors")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BookInfo.Models.Review", b =>
                {
                    b.HasOne("BookInfo.Models.Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookID");

                    b.HasOne("BookInfo.Models.AppUser", "Member")
                        .WithMany()
                        .HasForeignKey("MemberAppUserID");
                });
#pragma warning restore 612, 618
        }
    }
}
